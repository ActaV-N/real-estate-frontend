{"version":3,"sources":["components/layout/AppBarWithNavi.js","graphql/query/building.js","components/buildings/BuildingTable.js","containers/buildings/BuildingTableContainer.js","graphql/query/sector.js","graphql/mutation/sector.js","components/buildings/BuildingControlForm.js","containers/buildings/BuildingControlFormContainers.js","pages/MainPage.js","components/auth/AuthForm.js","components/auth/LoginForm.js","graphql/query/user.js","containers/auth/LoginFormContainer.js","pages/LoginPage.js","components/auth/RegisterForm.js","graphql/mutation/user.js","containers/auth/RegisterFormContainer.js","pages/RegisterPage.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","normalText","textDecoration","color","nested","paddingLeft","withRouter","children","container","match","classes","useTheme","useState","mobileOpen","setMobileOpen","buildingOpen","setBuildingOpen","handleDrawerToggle","className","Divider","List","Tooltip","title","placement","arrow","onClick","ListItem","button","ListItemIcon","Apartment","ListItemText","primary","Collapse","in","unmountOnExit","timeout","Link","to","url","AddBox","Person","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","Typography","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","BUILDINGS","gql","columns","name","label","options","filter","sort","filterType","table","marginBottom","fab","bottom","right","data","trade","map","d","date","Date","parseInt","creationDate","getFullYear","getMonth","getDate","dealInfo","price","lease","buildingInfo","length","deal","Container","maxWidth","Fab","Add","BuildingTableContainer","useQuery","loading","error","buildings","SECTORS","ADD_SECTOR","minWidth","form","withoutLabel","marginTop","expansionPanelContainer","background","panel","submitBtn","btnContainer","justifyContent","dialog","imageInput","imageBox","alignItems","flexDirection","image","height","tmpLocation","BuildingControlForm","sectors","handleTyping","field","handleSubmit","sectorType","sectorName","handleSectorType","handleSectorName","handleSectorAdd","handleLocationAdd","partyInfo","sectorDialog","setSectorDialog","locationDialog","setLocationDialog","setAnchor","selectedIndex","setSelectedIndex","locationImage","setLocationImage","locationName","setLocationName","handleSectorDialog","which","handleLocationSelect","index","event","Paper","elevation","Box","component","onSubmit","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanelDetails","Grid","item","xs","md","TextField","onChange","fullWidth","required","value","type","layer","InputProps","endAdornment","InputAdornment","FormHelperText","number","FormControl","e","currentTarget","secondary","anchorEl","Boolean","location","key","MenuItem","selected","style","Button","Dialog","DialogTitle","DialogContent","src","alt","id","file","target","files","URL","createObjectURL","htmlFor","DialogActions","saleArea","realArea","InputLabel","Select","basic","sector","detail","monthly","deposit","rights","owner","ownerPhone","lessee","lesseePhone","BuildingControlFormContainer","setField","setSectorType","setSectorName","sectorData","queryLoading","queryError","sectorRefetch","refetch","useMutation","addSector","mutationLoading","mutationError","preventDefault","console","log","fieldName","dialogController","variables","sectorInput","AppBarWithNavi","path","exact","minHeight","AuthForm","header","body","login","float","fontSize","LoginForm","onChangeField","onChangeForm","align","variang","LOGIN","history","_error","set_error","useLazyQuery","getLoginInfo","username","password","passwordCheck","inputForm","setInputForm","useEffect","localStorage","getItem","setItem","JSON","stringify","push","error_","graphQLErrors","extensions","code","userInput","AuthPage","RegisterForm","REGISTER","errorPolicy","getRegisterInfo","register","RegisterPage","App","process","MainPage","LoginPage","isLocalhost","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","client","ApolloClient","uri","ReactDOM","render","basename","StrictMode","document","getElementById","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.20587648.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n\tAppBar,\n\tLink,\n\tTooltip,\n\tCssBaseline,\n\tDivider,\n\tDrawer,\n\tHidden,\n\tIconButton,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n\tToolbar,\n\tTypography,\n\tCollapse,\n} from '@material-ui/core';\nimport { Apartment, Person, AddBox } from '@material-ui/icons';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t},\n\tdrawer: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t},\n\t},\n\tappBar: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t},\n\t// necessary for content to be below app bar\n\ttoolbar: theme.mixins.toolbar,\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t},\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(3),\n\t},\n\tnormalText: {\n\t\t'&:hover': {\n\t\t\ttextDecoration: 'none',\n\t\t},\n\t\tcolor: '#3e3e3e',\n\t},\n\tnested: {\n\t\tpaddingLeft: theme.spacing(4),\n\t},\n}));\n\nconst ResponsiveDrawer = ({ children, container, match }) => {\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst [mobileOpen, setMobileOpen] = useState(false);\n\n\tconst [buildingOpen, setBuildingOpen] = useState(false);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\tconst handleBuildingOpen = () => {\n\t\tsetBuildingOpen(!buildingOpen);\n\t};\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<div className={classes.toolbar} />\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t<Tooltip\n\t\t\t\t\ttitle=\"건물\"\n\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\tarrow\n\t\t\t\t\tonClick={handleBuildingOpen}\n\t\t\t\t>\n\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t<Apartment />\n\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary=\"건물 관리\" />\n\t\t\t\t\t</ListItem>\n\t\t\t\t</Tooltip>\n\t\t\t\t<Collapse in={buildingOpen} unmountOnExit timeout=\"auto\">\n\t\t\t\t\t<List>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`${match.url}/buildings/add`}\n\t\t\t\t\t\t\tclassName={classes.normalText}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tooltip title=\"건물 추가\" arrow placement=\"right\">\n\t\t\t\t\t\t\t\t<ListItem button className={classes.nested}>\n\t\t\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t\t\t<AddBox />\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ListItemText primary=\"건물 추가\" />\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</List>\n\t\t\t\t</Collapse>\n\t\t\t\t<Link to=\"/dashboard/customers\" className={classes.normalText}>\n\t\t\t\t\t<Tooltip title=\"고객\" placement=\"right\" arrow>\n\t\t\t\t\t\t<ListItem button>\n\t\t\t\t\t\t\t<ListItemIcon>\n\t\t\t\t\t\t\t\t<Person />\n\t\t\t\t\t\t\t</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary=\"고객 관리\" />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</Link>\n\t\t\t</List>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\tReal Estate\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n\t\t\t\t<Hidden smUp implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden xsDown implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t{children}\n\t\t\t</main>\n\t\t</div>\n\t);\n};\n\nResponsiveDrawer.propTypes = {\n\t/**\n\t * Injected by the documentation to work in an iframe.\n\t * You won't need it on your project.\n\t */\n\tcontainer: PropTypes.any,\n};\n\nexport default withRouter(ResponsiveDrawer);\n","import { gql } from 'apollo-boost';\n\nexport const BUILDINGS = gql`\n\tquery(\n\t\t$creationDate: Int\n\t\t$dealType: String\n\t\t$field: String\n\t\t$fieldOrder: Int\n\t) {\n\t\tbuildings(\n\t\t\tcreationDate: $creationDate\n\t\t\tdealType: $dealType\n\t\t\tfield: $field\n\t\t\tfieldOrder: $fieldOrder\n\t\t) {\n\t\t\tid\n\t\t\tcreationDate\n\t\t\tbuildingInfo {\n\t\t\t\tname\n\t\t\t\timage\n\t\t\t\tsaleArea\n\t\t\t\trealArea\n\t\t\t\tlayer\n\t\t\t\tnumber\n\t\t\t}\n\t\t\tdealInfo {\n\t\t\t\ttrade {\n\t\t\t\t\ttotalPrice\n\t\t\t\t\tprice\n\t\t\t\t\tmonthly\n\t\t\t\t\tdeposit\n\t\t\t\t}\n\t\t\t\tlease {\n\t\t\t\t\tprice\n\t\t\t\t\tmonthly\n\t\t\t\t\tdeposit\n\t\t\t\t}\n\t\t\t\trights\n\t\t\t}\n\t\t\tpartyInfo {\n\t\t\t\towner\n\t\t\t\townerPhone\n\t\t\t\tlessee\n\t\t\t\tlesseePhone\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography, Fab } from '@material-ui/core/';\nimport { Add } from '@material-ui/icons';\nimport MUIDataTable from 'mui-datatables';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst columns = [\n\t{\n\t\tname: 'creationDate',\n\t\tlabel: '등록일',\n\t\toptions: {\n\t\t\tfilter: false,\n\t\t\tsort: true,\n\t\t},\n\t},\n\t{\n\t\tname: 'buildingInfo.name',\n\t\tlabel: '건물명',\n\t\toptions: {\n\t\t\tfilter: false,\n\t\t\tsort: true,\n\t\t},\n\t},\n\t{\n\t\tname: 'buildingInfo.layer',\n\t\tlabel: '층수',\n\t\toptions: {\n\t\t\tfilter: false,\n\t\t\tsort: true,\n\t\t},\n\t},\n\t{\n\t\tname: 'buildingInfo.number',\n\t\tlabel: '호수',\n\t\toptions: {\n\t\t\tfilter: false,\n\t\t\tsort: true,\n\t\t},\n\t},\n\t{\n\t\tname: 'deal.price',\n\t\tlabel: '평당 가격',\n\t\toptions: {\n\t\t\tfilter: false,\n\t\t\tsort: true,\n\t\t},\n\t},\n\t{\n\t\tname: 'deal.monthly',\n\t\tlabel: '월세',\n\t\toptions: {\n\t\t\tfilter: false,\n\t\t\tsort: true,\n\t\t},\n\t},\n\t{\n\t\tname: 'deal.deposit',\n\t\tlabel: '보증금',\n\t\toptions: {\n\t\t\tfilter: false,\n\t\t\tsort: true,\n\t\t},\n\t},\n\t{\n\t\tname: 'dealInfo.rights',\n\t\tlabel: '권리금',\n\t\toptions: {\n\t\t\tsort: true,\n\t\t\tfilter: false,\n\t\t},\n\t},\n];\n\nconst options = {\n\tfilterType: 'dropdown',\n};\n\nconst useStyles = makeStyles({\n\troot: {\n\t\twidth: '100%',\n\t},\n\ttable: {\n\t\tmarginBottom: '3rem',\n\t},\n\ttitle: {\n\t\tmarginBottom: '1rem',\n\t},\n\tfab: {\n\t\tposition: 'fixed',\n\t\tbottom: '24px',\n\t\tright: '24px',\n\t},\n});\n\nconst BuildingTable = ({ data, match }) => {\n\tconst classes = useStyles();\n\n\tconst trade = data\n\t\t.map(d => {\n\t\t\tconst date = new Date(parseInt(d.creationDate));\n\t\t\tconst creationDate = `${date.getFullYear()}-${date.getMonth() +\n\t\t\t\t1}-${date.getDate()}`;\n\n\t\t\tif (d.dealInfo.trade.price) {\n\t\t\t\tif (d.dealInfo.lease.price) {\n\t\t\t\t\tif (d.buildingInfo.name[d.buildingInfo.name.length - 2] !== '*')\n\t\t\t\t\t\td.buildingInfo.name = d.buildingInfo.name + '(*)';\n\t\t\t\t}\n\t\t\t\tconst deal = d.dealInfo.trade;\n\n\t\t\t\treturn { ...d, creationDate, deal };\n\t\t\t}\n\n\t\t\treturn null;\n\t\t})\n\t\t.filter(d => d !== null);\n\n\tconst lease = data\n\t\t.map(d => {\n\t\t\tconst date = new Date(parseInt(d.creationDate));\n\t\t\tconst creationDate = `${date.getFullYear()}-${date.getMonth() +\n\t\t\t\t1}-${date.getDate()}`;\n\n\t\t\tif (d.dealInfo.lease.price) {\n\t\t\t\tif (d.dealInfo.trade.price) {\n\t\t\t\t\tif (d.buildingInfo.name[d.buildingInfo.name.length - 2] !== '*')\n\t\t\t\t\t\td.buildingInfo.name = d.buildingInfo.name + '(*)';\n\t\t\t\t}\n\t\t\t\tconst deal = d.dealInfo.lease;\n\n\t\t\t\treturn { ...d, creationDate, deal };\n\t\t\t}\n\t\t\treturn null;\n\t\t})\n\t\t.filter(d => d !== null);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Container maxWidth=\"md\">\n\t\t\t\t<Typography className={classes.title} variant=\"h5\">\n\t\t\t\t\t매매\n\t\t\t\t</Typography>\n\t\t\t\t<MUIDataTable\n\t\t\t\t\tclassName={classes.table}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tdata={trade}\n\t\t\t\t\toptions={options}\n\t\t\t\t/>\n\t\t\t\t<Typography className={classes.title} variant=\"h5\">\n\t\t\t\t\t임대\n\t\t\t\t</Typography>\n\t\t\t\t<MUIDataTable\n\t\t\t\t\tclassName={classes.table}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tdata={lease}\n\t\t\t\t\toptions={options}\n\t\t\t\t/>\n\t\t\t</Container>\n\t\t\t<Link to={`${match.url}/add`}>\n\t\t\t\t<Fab className={classes.fab} color=\"primary\" aria-label=\"add\">\n\t\t\t\t\t<Add />\n\t\t\t\t</Fab>\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(BuildingTable);\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { BUILDINGS } from '../../graphql/query/building';\nimport BuildingTable from '../../components/buildings/BuildingTable';\n\nconst BuildingTableContainer = () => {\n\tconst { data, loading, error } = useQuery(BUILDINGS);\n\t// const [order, setOrder] = useState(-1);\n\t// const [orderby, setOrderby] = useState('creationDate');\n\t// const [orderType, setOrderType] = useState('all');\n\n\tif (error) {\n\t\treturn <h1>Error</h1>;\n\t}\n\n\tif (loading) {\n\t\treturn <h1>Loading</h1>;\n\t}\n\n\t// const handleOrder = field => {\n\t// \tif (field === 'creationDate') {\n\t// \t}\n\t// };\n\n\tif (data) {\n\t\treturn <BuildingTable data={data.buildings} />;\n\t}\n};\n\nexport default BuildingTableContainer;\n","import { gql } from 'apollo-boost';\n\nexport const SECTORS = gql`\n\tquery($type: String) {\n\t\tsectors(type: $type) {\n\t\t\ttype\n\t\t\tname\n\t\t}\n\t}\n`;\n","import { gql } from 'apollo-boost';\n\nexport const ADD_SECTOR = gql`\n\tmutation($sectorInput: sectorInput) {\n\t\taddSector(sectorInput: $sectorInput) {\n\t\t\ttype\n\t\t\tname\n\t\t}\n\t}\n`;\n","import React, { useState } from 'react';\nimport {\n\tContainer,\n\tToolbar,\n\tTypography,\n\tPaper,\n\tGrid,\n\tBox,\n\tFormControl,\n\tTextField,\n\tInputLabel,\n\tFormHelperText,\n\tInputAdornment,\n\tExpansionPanel,\n\tExpansionPanelSummary,\n\tExpansionPanelDetails,\n\tButton,\n\tSelect,\n\tMenuItem,\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogActions,\n\tTooltip,\n\tMenu,\n\tList,\n\tListItem,\n\tListItemText,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExpandMore } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\twidth: '100%',\n\t\tminWidth: '650px',\n\t},\n\tform: {\n\t\twidth: '100%',\n\t\tpadding: '24px',\n\t},\n\twithoutLabel: {\n\t\tmarginTop: theme.spacing(2),\n\t},\n\texpansionPanelContainer: {\n\t\tbackground: '#efefef',\n\t},\n\tpaper: {\n\t\tbackground: 'inherit',\n\t},\n\tpanel: {\n\t\tbackground: '#fff',\n\t},\n\tsubmitBtn: {\n\t\tmarginTop: '2rem',\n\t},\n\tbtnContainer: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-end',\n\t},\n\tdialog: {\n\t\tminWidth: '',\n\t},\n\timageInput: {\n\t\tdisplay: 'none',\n\t},\n\timageBox: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n\timage: {\n\t\theight: '320px',\n\t\tmarginBottom: '1rem',\n\t},\n}));\n\nconst tmpLocation = ['A시', 'B시', 'C시'];\n\nconst BuildingControlForm = ({\n\tsectors,\n\thandleTyping,\n\tfield,\n\thandleSubmit,\n\tsectorType,\n\tsectorName,\n\thandleSectorType,\n\thandleSectorName,\n\thandleSectorAdd,\n\thandleLocationAdd,\n}) => {\n\tconst { buildingInfo, dealInfo, partyInfo } = field;\n\n\t// Dialog states\n\tconst [sectorDialog, setSectorDialog] = useState(false);\n\tconst [locationDialog, setLocationDialog] = useState(false);\n\n\t// Location Menu states\n\tconst [anchor, setAnchor] = useState(null);\n\tconst [selectedIndex, setSelectedIndex] = useState(0);\n\n\t// Location Image states\n\tconst [locationImage, setLocationImage] = useState('');\n\tconst [locationName, setLocationName] = useState('');\n\n\tconst classes = useStyles();\n\n\tconst handleSectorDialog = which => () => {\n\t\tsetSectorDialog(which);\n\t};\n\n\tconst handleAnchor = e => {\n\t\tsetAnchor(e.currentTarget);\n\t};\n\n\tconst handleAnchorClose = () => {\n\t\tsetAnchor(null);\n\t};\n\n\tconst handleLocationSelect = index => event => {\n\t\tsetSelectedIndex(index);\n\t\tsetAnchor(null);\n\t};\n\n\tconst handleLocationImage = e => {\n\t\tconst file = e.target.files[0];\n\t\tsetLocationImage(URL.createObjectURL(file));\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Container maxWidth=\"md\">\n\t\t\t\t<Paper elevation={0} className={classes.paper}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography variant=\"h4\">건물 등록</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tcomponent=\"form\"\n\t\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ExpansionPanel className={classes.panel}>\n\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMore />}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">건물 정보</Typography>\n\t\t\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t\t\t<ExpansionPanelDetails>\n\t\t\t\t\t\t\t\t<Grid container spacing={4}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('buildingInfo')}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"건물명\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tvalue={buildingInfo.name}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={3}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"layer\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('buildingInfo')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tvalue={buildingInfo.layer}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>층</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormHelperText>층수를 입력해주세요</FormHelperText>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={3}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('buildingInfo')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tvalue={buildingInfo.number}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>호</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormHelperText>호수를 입력해주세요</FormHelperText>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={3}>\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t\t\t\t\t<ListItem button onClick={handleAnchor}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprimary=\"위치선택\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsecondary={`현재 위치: ${tmpLocation[selectedIndex]}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\t\t\t\t\tanchorEl={anchor}\n\t\t\t\t\t\t\t\t\t\t\t\topen={Boolean(anchor)}\n\t\t\t\t\t\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\t\t\t\t\t\tonClose={handleAnchorClose}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{tmpLocation.map((location, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle=\"something\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tarrow\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={location}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected={index === selectedIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleLocationSelect(index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ minWidth: '200px' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{location}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={3}>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.withoutLabel}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setLocationDialog(true)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t위치 추가\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\t\t\t\t\tmaxWidth=\"xs\"\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\topen={locationDialog}\n\t\t\t\t\t\t\t\t\t\t\tonClose={() => setLocationDialog(false)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<DialogTitle>위치 추가</DialogTitle>\n\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<Box component=\"div\" className={classes.imageBox}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{locationImage && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={locationImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.image}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt=\"Location\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"imageInput\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.imageInput}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleLocationImage}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"imageInput\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t사진 선택\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"위치 이름\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={locationName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setLocationName(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setLocationDialog(false)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t취소\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleLocationAdd(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlocationImage,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlocationName,\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t추가\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={6}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.withoutLabel}\n\t\t\t\t\t\t\t\t\t\t\tname=\"saleArea\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('buildingInfo')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tvalue={buildingInfo.saleArea}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>평</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormHelperText>분양 평수를 입력해주세요</FormHelperText>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tclassName={classes.withoutLabel}\n\t\t\t\t\t\t\t\t\t\t\tname=\"realArea\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('buildingInfo')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tvalue={buildingInfo.realArea}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>평</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormHelperText>실제 평수를 입력해주세요</FormHelperText>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={3}>\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"basic\">업종</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"basic\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"basic\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={buildingInfo.sectors.basic}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('buildingInfo.sectors')}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{sectors\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(sector => sector.type === 'basic')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map(sector => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={sector.name} value={sector.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{sector.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={3}>\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"detail\">상세 업종</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"detail\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={buildingInfo.sectors.detail}\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"detail\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('buildingInfo.sectors')}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{sectors\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(sector => sector.type === 'detail')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map(sector => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={sector.name} value={sector.name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{sector.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth className={classes.withoutLabel}>\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleSectorDialog(true)}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t업종 추가\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Dialog maxWidth=\"xs\" fullWidth open={sectorDialog}>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogTitle>업종 추가</DialogTitle>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"sectorType\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t업종 분류\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"sectorType\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sectorType}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleSectorType}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={'basic'}>기본</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem value={'detail'}>상세</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"업종명\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={sectorName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleSectorName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleSectorDialog(false)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t취소\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleSectorAdd(handleSectorDialog)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t추가\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t\t\t\t\t\t\t</Dialog>\n\t\t\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t\t\t</ExpansionPanel>\n\t\t\t\t\t\t<ExpansionPanel className={classes.panel}>\n\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMore />}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">거래 정보</Typography>\n\t\t\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t\t\t<ExpansionPanelDetails>\n\t\t\t\t\t\t\t\t<Grid container spacing={4}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">매매</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} md={4}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('dealInfo.trade')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={dealInfo.trade.price}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"평당 가격\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>만원</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} md={4}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"monthly\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('dealInfo.trade')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"월세\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={dealInfo.trade.monthly}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>만원</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} md={4}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"deposit\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('dealInfo.trade')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"보증금\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={dealInfo.trade.deposit}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>만원</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">임대</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} md={4}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"price\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('dealInfo.lease')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={dealInfo.lease.price}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"평당 가격\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>만원</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} md={4}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"monthly\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('dealInfo.lease')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"월세\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={dealInfo.lease.monthly}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>만원</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={4} md={4}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"deposit\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('dealInfo.lease')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"보증금\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={dealInfo.lease.deposit}\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>만원</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">보증금</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tname=\"rights\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('dealInfo')}\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"권리금\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={dealInfo.rights}\n\t\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment>만원</InputAdornment>,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t\t\t</ExpansionPanel>\n\t\t\t\t\t\t<ExpansionPanel>\n\t\t\t\t\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMore />}>\n\t\t\t\t\t\t\t\t<Typography variant=\"h6\">관계자 정보</Typography>\n\t\t\t\t\t\t\t</ExpansionPanelSummary>\n\t\t\t\t\t\t\t<ExpansionPanelDetails>\n\t\t\t\t\t\t\t\t<Grid container spacing={4}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t<Typography>소유자 정보</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={6}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tname=\"owner\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"이름\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={partyInfo.owner}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('partyInfo')}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={6}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tname=\"ownerPhone\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={partyInfo.ownerPhone}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"전화번호\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('partyInfo')}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} md={12}>\n\t\t\t\t\t\t\t\t\t\t<Typography>임차인 정보</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={6}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tvalue={partyInfo.lessee}\n\t\t\t\t\t\t\t\t\t\t\tname=\"lessee\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"이름\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('partyInfo')}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={6} md={6}>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tname=\"lesseePhone\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={partyInfo.lesseePhone}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"전화번호\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleTyping('partyInfo')}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</ExpansionPanelDetails>\n\t\t\t\t\t\t</ExpansionPanel>\n\t\t\t\t\t\t<Box className={classes.btnContainer}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName={classes.submitBtn}\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t건물 데이터 생성\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Paper>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default BuildingControlForm;\n","import React, { useState } from 'react';\nimport { SECTORS } from '../../graphql/query/sector';\nimport { ADD_SECTOR } from '../../graphql/mutation/sector';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport BuildingControlForm from '../../components/buildings/BuildingControlForm';\n\nconst BuildingControlFormContainer = () => {\n\tconst initialState = {\n\t\tbuildingInfo: {\n\t\t\timage: null,\n\t\t\tname: '',\n\t\t\tlayer: '',\n\t\t\tnumber: '',\n\t\t\tsaleArea: '',\n\t\t\trealArea: '',\n\t\t\tsectors: {\n\t\t\t\tbasic: '',\n\t\t\t\tdetail: '',\n\t\t\t},\n\t\t\tlocation: null,\n\t\t},\n\t\tdealInfo: {\n\t\t\ttrade: {\n\t\t\t\tprice: '',\n\t\t\t\tmonthly: '',\n\t\t\t\tdeposit: '',\n\t\t\t},\n\t\t\tlease: {\n\t\t\t\tprice: '',\n\t\t\t\tmonthly: '',\n\t\t\t\tdeposit: '',\n\t\t\t},\n\t\t\trights: '',\n\t\t},\n\t\tpartyInfo: {\n\t\t\towner: '',\n\t\t\townerPhone: '',\n\t\t\tlessee: '',\n\t\t\tlesseePhone: '',\n\t\t},\n\t};\n\tconst [field, setField] = useState(initialState);\n\tconst [sectorType, setSectorType] = useState('basic');\n\tconst [sectorName, setSectorName] = useState('');\n\n\tconst {\n\t\tdata: sectorData,\n\t\tloading: queryLoading,\n\t\terror: queryError,\n\t\trefetch: sectorRefetch,\n\t} = useQuery(SECTORS);\n\tconst [\n\t\taddSector,\n\t\t{ loading: mutationLoading, error: mutationError },\n\t] = useMutation(ADD_SECTOR);\n\n\tif (queryLoading || mutationLoading) {\n\t\treturn 'loading';\n\t}\n\n\tif (queryError || mutationError) {\n\t\treturn 'error';\n\t}\n\tconst handleTyping = fieldName => e => {\n\t\tconst { name, value } = e.target;\n\t\tif (fieldName === 'buildingInfo.sectors') {\n\t\t\tsetField({\n\t\t\t\t...field,\n\t\t\t\tbuildingInfo: {\n\t\t\t\t\t...field.buildingInfo,\n\t\t\t\t\tsectors: {\n\t\t\t\t\t\t...field.buildingInfo.sectors,\n\t\t\t\t\t\t[name]: value,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (fieldName === 'dealInfo.trade') {\n\t\t\tsetField({\n\t\t\t\t...field,\n\t\t\t\tdealInfo: {\n\t\t\t\t\t...field.dealInfo,\n\t\t\t\t\ttrade: {\n\t\t\t\t\t\t...field.dealInfo.trade,\n\t\t\t\t\t\t[name]: value,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (fieldName === 'dealInfo.lease') {\n\t\t\tsetField({\n\t\t\t\t...field,\n\t\t\t\tdealInfo: {\n\t\t\t\t\t...field.dealInfo,\n\t\t\t\t\tlease: {\n\t\t\t\t\t\t...field.dealInfo.lease,\n\t\t\t\t\t\t[name]: value,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tsetField({\n\t\t\t\t...field,\n\t\t\t\t[fieldName]: {\n\t\t\t\t\t...field[fieldName],\n\t\t\t\t\t[name]: value,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tconsole.log(sectorData);\n\t};\n\n\tconst handleSectorType = e => {\n\t\tconst { value } = e.target;\n\t\tsetSectorType(value);\n\t};\n\n\tconst handleSectorName = e => {\n\t\tconst { value } = e.target;\n\t\tsetSectorName(value);\n\t};\n\n\tconst handleSectorAdd = dialogController => e => {\n\t\te.preventDefault();\n\t\taddSector({\n\t\t\tvariables: {\n\t\t\t\tsectorInput: {\n\t\t\t\t\t[sectorType]: sectorName,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t\tsectorRefetch();\n\t\tdialogController(false);\n\t};\n\n\tconst handleLocationAdd = (file, name) => e => {\n\t\t// e.preventDefault();\n\t\tconsole.log('?', file, name);\n\t};\n\n\treturn (\n\t\t<BuildingControlForm\n\t\t\tsectors={sectorData.sectors}\n\t\t\tfield={field}\n\t\t\tsectorName={sectorName}\n\t\t\tsectorType={sectorType}\n\t\t\thandleSubmit={handleSubmit}\n\t\t\thandleTyping={handleTyping}\n\t\t\thandleSectorType={handleSectorType}\n\t\t\thandleSectorName={handleSectorName}\n\t\t\thandleSectorAdd={handleSectorAdd}\n\t\t\thandleLocationAdd={handleLocationAdd}\n\t\t/>\n\t);\n};\n\nexport default BuildingControlFormContainer;\n","import React from 'react';\nimport AppBarWithNavi from '../components/layout/AppBarWithNavi';\nimport { Route, withRouter } from 'react-router-dom';\nimport BuildingTableContainer from '../containers/buildings/BuildingTableContainer';\nimport BuildingControlFormContainer from '../containers/buildings/BuildingControlFormContainers';\n\nconst MainPage = ({ match }) => {\n\treturn (\n\t\t<AppBarWithNavi>\n\t\t\t<Route path={`${match.path}/buildings`} exact>\n\t\t\t\t<BuildingTableContainer />\n\t\t\t</Route>\n\t\t\t<Route path={`${match.path}/buildings/add`}>\n\t\t\t\t<BuildingControlFormContainer />\n\t\t\t</Route>\n\t\t\t<Route path={`${match.path}/customers`}>\n\t\t\t\t<h1>good</h1>\n\t\t\t</Route>\n\t\t</AppBarWithNavi>\n\t);\n};\n\nexport default withRouter(MainPage);\n","import React from 'react';\nimport { Paper } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tminHeight: '100vh',\n\t\tbackground: '#eee',\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\t'& > *': {\n\t\t\twidth: '437px',\n\t\t},\n\t},\n});\n\nconst AuthForm = ({ children }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<div className={classes.root}>\n\t\t\t\t<Paper>{children}</Paper>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default AuthForm;\n","import React from 'react';\nimport { Grid, TextField, Typography, Button, Box } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\theader: {\n\t\tbackground: '#3f51b5',\n\t\tcolor: '#fff',\n\t\tpadding: '.8rem 0',\n\t},\n\tbody: {\n\t\tpadding: '1rem',\n\t},\n\tlogin: {\n\t\tfloat: 'right',\n\t},\n\terror: {\n\t\tcolor: '#f44336',\n\t\tfontSize: '.8rem',\n\t},\n});\n\nconst LoginForm = ({ onChangeField, onChangeForm, onSubmit, error }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h4\" align=\"center\" className={classes.header}>\n\t\t\t\t로그인\n\t\t\t</Typography>\n\t\t\t<Box component=\"form\" onSubmit={onSubmit}>\n\t\t\t\t<Grid container className={classes.body} spacing={3}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonChange={onChangeField}\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tonChange={onChangeField}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{error && (\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tvariang=\"body2\"\n\t\t\t\t\t\t\t\tclassName={classes.error}\n\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t)}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Button fullWidth onClick={onChangeForm}>\n\t\t\t\t\t\t\t회원가입으로 전환하기\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tclassName={classes.login}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t로그인\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default LoginForm;\n","import { gql } from 'apollo-boost';\n\nexport const LOGIN = gql`\n\tquery($userInput: userInput!) {\n\t\tlogin(userInput: $userInput) {\n\t\t\tid\n\t\t\tusername\n\t\t}\n\t}\n`;\n","import React, { useState, useEffect } from 'react';\nimport LoginForm from '../../components/auth/LoginForm';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { LOGIN } from '../../graphql/query/user';\nimport { withRouter } from 'react-router-dom';\n\nconst LoginFormContainer = ({ history }) => {\n\tconst [_error, set_error] = useState(null);\n\n\tconst [getLoginInfo, { data, error }] = useLazyQuery(LOGIN);\n\n\tconst [inputForm, setInputForm] = useState({\n\t\tusername: null,\n\t\tpassword: null,\n\t\tpasswordCheck: null,\n\t});\n\n\tconst onChangeField = e => {\n\t\tconst { name, value } = e.target;\n\t\tsetInputForm({\n\t\t\t...inputForm,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\tconst onChangeForm = () => {\n\t\thistory.push('/auth/register');\n\t};\n\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t\tgetLoginInfo({\n\t\t\tvariables: { userInput: { ...inputForm } },\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\ttry {\n\t\t\t\tconst { login } = data;\n\t\t\t\tconst exist = localStorage.getItem('user');\n\t\t\t\tif (!exist) {\n\t\t\t\t\tlocalStorage.setItem('user', JSON.stringify(login));\n\t\t\t\t\thistory.push('/');\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\t\tif (error) {\n\t\t\tlet error_ = error.graphQLErrors[0].extensions.code;\n\t\t\tif (error_ === 'user_not_found') {\n\t\t\t\tset_error('사용자를 찾을 수 없습니다.');\n\t\t\t}\n\t\t\tif (error_ === 'invalid_password') {\n\t\t\t\tset_error('비밀번호가 일치하지 않습니다.');\n\t\t\t}\n\t\t}\n\t}, [data, error, history]);\n\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tconst exist = localStorage.getItem('user');\n\t\t\tif (exist) {\n\t\t\t\thistory.push('/');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t});\n\n\treturn (\n\t\t<LoginForm\n\t\t\tonChangeField={onChangeField}\n\t\t\tonChangeForm={onChangeForm}\n\t\t\tonSubmit={onSubmit}\n\t\t\terror={_error}\n\t\t/>\n\t);\n};\n\nexport default withRouter(LoginFormContainer);\n","import React from 'react';\nimport AuthForm from '../components/auth/AuthForm';\nimport LoginFormContainer from '../containers/auth/LoginFormContainer';\n\nconst AuthPage = () => {\n\treturn (\n\t\t<AuthForm>\n\t\t\t<LoginFormContainer />\n\t\t</AuthForm>\n\t);\n};\n\nexport default AuthPage;\n","import React from 'react';\nimport { Grid, TextField, Typography, Button, Box } from '@material-ui/core';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n\theader: {\n\t\tbackground: '#3f51b5',\n\t\tcolor: '#fff',\n\t\tpadding: '.8rem 0',\n\t},\n\tbody: {\n\t\tpadding: '1rem',\n\t},\n\tlogin: {\n\t\tfloat: 'right',\n\t},\n});\n\nconst RegisterForm = ({ onChangeField, onChangeForm, onSubmit }) => {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<Typography variant=\"h4\" align=\"center\" className={classes.header}>\n\t\t\t\t회원가입\n\t\t\t</Typography>\n\t\t\t<Box component=\"form\" onSubmit={onSubmit}>\n\t\t\t\t<Grid container className={classes.body} spacing={3}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonChange={onChangeField}\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tonChange={onChangeField}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Password Confirm\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tname=\"passwordCheck\"\n\t\t\t\t\t\t\tonChange={onChangeField}\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Button fullWidth onClick={onChangeForm}>\n\t\t\t\t\t\t\t로그인으로 전환하기\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tclassName={classes.login}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t회원가입\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default RegisterForm;\n","import { gql } from 'apollo-boost';\n\nexport const REGISTER = gql`\n\tmutation($userInput: userInput!) {\n\t\tregister(userInput: $userInput) {\n\t\t\tid\n\t\t\tusername\n\t\t}\n\t}\n`;\n","import React, { useState, useEffect } from 'react';\nimport RegisterForm from '../../components/auth/RegisterForm';\nimport { useMutation } from '@apollo/react-hooks';\nimport { REGISTER } from '../../graphql/mutation/user';\nimport { withRouter } from 'react-router-dom';\n\nconst RegisterFormContainer = ({ history }) => {\n\tconst [getRegisterInfo, { data, error }] = useMutation(REGISTER, {\n\t\terrorPolicy: 'none',\n\t});\n\n\tconst [inputForm, setInputForm] = useState({\n\t\tusername: null,\n\t\tpassword: null,\n\t\tpasswordCheck: null,\n\t});\n\n\tconst onChangeField = e => {\n\t\tconst { name, value } = e.target;\n\t\tsetInputForm({\n\t\t\t...inputForm,\n\t\t\t[name]: value,\n\t\t});\n\t};\n\n\tconst onChangeForm = () => {\n\t\thistory.push('/auth/login');\n\t};\n\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t\tgetRegisterInfo({\n\t\t\tvariables: { userInput: { ...inputForm } },\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\ttry {\n\t\t\t\tconst { register } = data;\n\t\t\t\tconst exist = localStorage.getItem('user');\n\t\t\t\tif (!exist) {\n\t\t\t\t\tlocalStorage.setItem('user', JSON.stringify(register));\n\t\t\t\t\thistory.push('/');\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\t\tif (error) {\n\t\t\tconsole.log(error.graphQLErrors[0].extensions.code);\n\t\t}\n\t}, [data, error, history]);\n\n\tuseEffect(() => {\n\t\ttry {\n\t\t\tconst exist = localStorage.getItem('user');\n\t\t\tif (exist) {\n\t\t\t\thistory.push('/');\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e);\n\t\t}\n\t});\n\n\treturn (\n\t\t<RegisterForm\n\t\t\tonChangeField={onChangeField}\n\t\t\tonChangeForm={onChangeForm}\n\t\t\tonSubmit={onSubmit}\n\t\t/>\n\t);\n};\n\nexport default withRouter(RegisterFormContainer);\n","import React from 'react';\nimport AuthForm from '../components/auth/AuthForm';\nimport RegisterFormContainer from '../containers/auth/RegisterFormContainer';\n\nconst RegisterPage = () => {\n\treturn (\n\t\t<AuthForm>\n\t\t\t<RegisterFormContainer />\n\t\t</AuthForm>\n\t);\n};\nexport default RegisterPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport MainPage from './pages/MainPage';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Route\n\t\t\t\tpath={`${process.env.PUBLIC_URL}/dashboard`}\n\t\t\t\tcomponent={MainPage}\n\t\t\t/>\n\t\t\t<Route path={'/auth/login'} component={LoginPage} />\n\t\t\t<Route path={'/auth/register'} component={RegisterPage} />\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nconst client = new ApolloClient({\n\turi: 'http://localhost:4000/graphql',\n});\n\nReactDOM.render(\n\t<ApolloProvider client={client}>\n\t\t<HashRouter basename=\"/\">\n\t\t\t<React.StrictMode>\n\t\t\t\t<App />\n\t\t\t</React.StrictMode>\n\t\t</HashRouter>\n\t</ApolloProvider>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}